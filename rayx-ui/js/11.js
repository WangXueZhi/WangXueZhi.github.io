(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{106:function(t,e,n){"use strict";var o=n(107),s=(n(11),n(65),n(108),n(109),n(110)),a=n.n(s),r=n(111),c=n.n(r),i=n(112),u=n.n(i),l=n(113),h=n.n(l),d=n(114),p=n.n(d),f=n(115),m=n.n(f),y=n(116),v=n.n(y),b=n(117),k=n.n(b),L=n(118),g=n.n(L),w=n(119),B=n.n(w),A=n(120),S=n.n(A),x=n(122),C=n.n(x),j=n(123),E=n.n(j),$=new a.a({highlight:function(t,e){if(e&&E.a.getLanguage(e))try{return'<pre><code class="hljs" v-pre>'+E.a.highlight(e,t,!0).value+"</code></pre>"}catch(t){}return'<pre><code class="hljs" v-pre>'+$.utils.escapeHtml(t)+"</code></pre>"}});e.a={md:$,template:"<div><slot></slot></div>",data:function(){return{sourceData:this.source}},props:{watches:{type:Array,default:function(){return["source","show","toc"]}},source:{type:String,default:""},show:{type:Boolean,default:!0},highlight:{type:Boolean,default:!0},html:{type:Boolean,default:!0},xhtmlOut:{type:Boolean,default:!0},breaks:{type:Boolean,default:!0},linkify:{type:Boolean,default:!0},emoji:{type:Boolean,default:!0},typographer:{type:Boolean,default:!0},langPrefix:{type:String,default:"language-"},quotes:{type:String,default:"“”‘’"},tableClass:{type:String,default:"table"},taskLists:{type:Boolean,default:!0},toc:{type:Boolean,default:!1},tocId:{type:String},tocClass:{type:String,default:"table-of-contents"},tocFirstLevel:{type:Number,default:2},tocLastLevel:{type:Number},tocAnchorLink:{type:Boolean,default:!0},tocAnchorClass:{type:String,default:"toc-anchor"},tocAnchorLinkSymbol:{type:String,default:"#"},tocAnchorLinkSpace:{type:Boolean,default:!0},tocAnchorLinkClass:{type:String,default:"toc-anchor-link"},anchorAttributes:{type:Object,default:function(){return{}}},prerender:{type:Function,default:function(t){return t}},postrender:{type:Function,default:function(t){return t}}},computed:{tocLastLevelComputed:function(){return this.tocLastLevel>this.tocFirstLevel?this.tocLastLevel:this.tocFirstLevel+1}},render:function(t){var e=this;this.md=$.use(u.a).use(h.a).use(p.a).use(m.a).use(v.a).use(k.a).use(g.a).use(S.a,{throwOnError:!1,errorColor:" #cc0000"}).use(C.a,{enabled:this.taskLists}),this.emoji&&this.md.use(c.a),this.md.set({html:this.html,xhtmlOut:this.xhtmlOut,breaks:this.breaks,linkify:this.linkify,typographer:this.typographer,langPrefix:this.langPrefix,quotes:this.quotes}),this.md.renderer.rules.table_open=function(){return'<table class="'.concat(e.tableClass,'">\n')};var n=this.md.renderer.rules.link_open||function(t,e,n,o,s){return s.renderToken(t,e,n)};this.md.renderer.rules.link_open=function(t,o,s,a,r){return Object.keys(e.anchorAttributes).map((function(n){var s=t[o].attrIndex(n),a=e.anchorAttributes[n];s<0?t[o].attrPush([n,a]):t[o].attrs[s][1]=a})),n(t,o,s,a,r)},this.toc&&this.md.use(B.a,{tocClassName:this.tocClass,tocFirstLevel:this.tocFirstLevel,tocLastLevel:this.tocLastLevelComputed,anchorLink:this.tocAnchorLink,anchorLinkSymbol:this.tocAnchorLinkSymbol,anchorLinkSpace:this.tocAnchorLinkSpace,anchorClassName:this.tocAnchorClass,anchorLinkSymbolClassName:this.tocAnchorLinkClass,tocCallback:function(t,n,o){o&&(e.tocId&&document.getElementById(e.tocId)&&(document.getElementById(e.tocId).innerHTML=o),e.$emit("toc-rendered",o))}});var o=this.show?this.md.render(this.prerender(this.sourceData)):"";return o=this.postrender(o),this.$emit("rendered",o),t("div",{class:{"ra-docs-wrapper":!0},domProps:{innerHTML:o}})},beforeMount:function(){var t=this;if(this.$slots.default){this.sourceData="";var e,n=Object(o.a)(this.$slots.default);try{for(n.s();!(e=n.n()).done;){var s=e.value;this.sourceData+=s.text}}catch(t){n.e(t)}finally{n.f()}}this.$watch("source",(function(){t.sourceData=t.prerender(t.source),t.$forceUpdate()})),this.watches.forEach((function(e){t.$watch(e,(function(){t.$forceUpdate()}))}))}}},440:function(t,e){t.exports="# 创建组件\n\n## 用命令创建组件模板\n```\nnpm run create -- --name=compnent-name\n```\n\n## 组件命名\n我们统一使用全小写命名组件，例如：```button```，如果是多单词命名，必须使用```kebab-case```（短横线分隔）的方式命名组件，比如 ```my-component```, 使用命令创建可使用小驼峰、大驼峰、短横线任意一种方式，内部会转换成短横线的命名\n\n## 组件目录\n组件目录名就是组件名，里面必须包含```.vue```，```.scss```，```index.js```三个文件：\n\n1. 同组件名的```.vue```单文件组件\n2. 同组件名的```.scss```文件，因为我们使用scss作为样式预处理\n3. ```index.js```, 这里要完成对组件的注册函数和导出 \n4. ```README.md```, 这里是组件的使用文档，会被解析成html，具体请查阅[组件的md编写规范](#/development/md), 如果不展示文档，该文件可以没有\n\n目录示例：\n\n```\npackages\n└─my-component\n│   │ my-component.vue\n│   │ my-component.scss\n│   │ index.js\n│   │ README.md\n```\n\n```index.js```文件的示例：\n```js\nimport Button from './button.vue'\n\n// 为组件提供 install 安装方法，供按需引入\nButton.install = function (Vue) {\n  Vue.component(Button.name, Button)\n}\n\n// 默认导出组件\nexport default Button\n```\n\n## 注意\n1. 如果只需要展示文档，在目录下编写markdown就行，不需要组件文件，参考packages目录下的```grid```\n2. 如果不需要展示文档，单纯增加组件，在目录下编写组件的文件就行"},472:function(t,e,n){"use strict";n.r(e);var o=n(106),s=n(440),a=n.n(s),r={name:"views.development.base",components:{VueMarkdown:o.a},data:function(){return{base:a.a}},computed:{},methods:{}},c=n(0),i=Object(c.a)(r,(function(){var t=this.$createElement;return(this._self._c||t)("vue-markdown",[this._v(this._s(this.base))])}),[],!1,null,null,null);e.default=i.exports}}]);
//# sourceMappingURL=11.js.map