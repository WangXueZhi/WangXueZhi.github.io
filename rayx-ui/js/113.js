"use strict";(self.webpackChunkrayx_ui=self.webpackChunkrayx_ui||[]).push([[113],{3113:(s,a,n)=>{n.r(a),n.d(a,{default:()=>K});var l=n(6252),t=n(3577);const p={class:"ra-docs-wrapper"},o=(0,l.Wm)("h1",null,"Modal",-1),c=(0,l.Wm)("p",null,"模态框，在弹出层上展示一些内容",-1),e=(0,l.Wm)("h2",null,"示例",-1),d=(0,l.Wm)("p",null,"基础用法",-1),h={class:"ra-docs-demo-examp"},r={class:"ra-docs-demo-comps"},m=(0,l.uE)('<pre><code class="hljs"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;modal-demo-wrapper&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">r-modal</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span> <span class="hljs-attr">:bodyOverflow</span>=<span class="hljs-string">&quot;false&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;modal-content-demo0&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;modal-content-demo0-head&quot;</span>&gt;</span>模态框基础用法<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;modal-content-demo0-foot&quot;</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">r-button</span> <span class="hljs-attr">colorType</span>=<span class="hljs-string">&quot;error&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;show = false&quot;</span>&gt;</span>关闭<span class="hljs-tag">&lt;/<span class="hljs-name">r-button</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">r-modal</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">r-button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;show = true&quot;</span>&gt;</span>显示<span class="hljs-tag">&lt;/<span class="hljs-name">r-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">return</span> {\n      <span class="hljs-attr">show</span>: <span class="hljs-literal">false</span>\n    }\n  }\n}\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css">\n<span class="hljs-selector-class">.modal-content-demo0</span> {\n  <span class="hljs-attribute">min-width</span>: <span class="hljs-number">200px</span>;\n  <span class="hljs-attribute">background</span>: <span class="hljs-number">#fff</span>;\n  <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#ccc</span>;\n  <span class="hljs-attribute">padding</span>: <span class="hljs-number">15px</span>;\n  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">2px</span>;\n}\n<span class="hljs-selector-class">.modal-content-demo0-foot</span> {\n  <span class="hljs-attribute">display</span>: flex;\n  <span class="hljs-attribute">margin-top</span>: <span class="hljs-number">20px</span>;\n  <span class="hljs-attribute">justify-content</span>: flex-end;\n}\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>\n</code></pre>',1),j=(0,l.Wm)("p",null,"模态框动画",-1),i={class:"ra-docs-demo-examp"},u={class:"ra-docs-demo-comps"},g=(0,l.uE)('<pre><code class="hljs"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;modal-demo-wrapper&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">r-modal</span>\n      <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span>\n      <span class="hljs-attr">:bodyOverflow</span>=<span class="hljs-string">&quot;false&quot;</span>\n      <span class="hljs-attr">animateIn</span>=<span class="hljs-string">&quot;bounceIn&quot;</span>\n      <span class="hljs-attr">animateOut</span>=<span class="hljs-string">&quot;bounceOut&quot;</span>\n    &gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;modal-content-demo1&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;modal-content-demo1-head&quot;</span>&gt;</span>模态框基础用法<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;modal-content-demo1-foot&quot;</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">r-button</span> <span class="hljs-attr">colorType</span>=<span class="hljs-string">&quot;error&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;show = false&quot;</span>&gt;</span>关闭<span class="hljs-tag">&lt;/<span class="hljs-name">r-button</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">r-modal</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">r-button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;show = true&quot;</span>&gt;</span>显示<span class="hljs-tag">&lt;/<span class="hljs-name">r-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">return</span> {\n      <span class="hljs-attr">show</span>: <span class="hljs-literal">false</span>\n    }\n  }\n}\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css">\n<span class="hljs-selector-class">.modal-content-demo1</span> {\n  <span class="hljs-attribute">min-width</span>: <span class="hljs-number">200px</span>;\n  <span class="hljs-attribute">background</span>: <span class="hljs-number">#fff</span>;\n  <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#ccc</span>;\n  <span class="hljs-attribute">padding</span>: <span class="hljs-number">15px</span>;\n  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">2px</span>;\n}\n<span class="hljs-selector-class">.modal-content-demo1-foot</span> {\n  <span class="hljs-attribute">display</span>: flex;\n  <span class="hljs-attribute">margin-top</span>: <span class="hljs-number">20px</span>;\n  <span class="hljs-attribute">justify-content</span>: flex-end;\n}\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>\n</code></pre>',1),w=(0,l.Wm)("p",null,"点击遮罩层关闭",-1),b={class:"ra-docs-demo-examp"},v={class:"ra-docs-demo-comps"},C=(0,l.uE)('<pre><code class="hljs"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;modal-demo-wrapper&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">r-modal</span>\n      <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span>\n      <span class="hljs-attr">:bodyOverflow</span>=<span class="hljs-string">&quot;false&quot;</span>\n      <span class="hljs-attr">animateIn</span>=<span class="hljs-string">&quot;bounceIn&quot;</span>\n      <span class="hljs-attr">animateOut</span>=<span class="hljs-string">&quot;bounceOut&quot;</span>\n      <span class="hljs-attr">closeOnClickMask</span>\n    &gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;modal-content-demo1&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;modal-content-demo1-head&quot;</span>&gt;</span>点击遮罩层关闭<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;modal-content-demo1-content&quot;</span>&gt;</span>没有关闭按钮可咋整？<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">r-modal</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">r-button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;show = true&quot;</span>&gt;</span>显示<span class="hljs-tag">&lt;/<span class="hljs-name">r-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">return</span> {\n      <span class="hljs-attr">show</span>: <span class="hljs-literal">false</span>\n    }\n  }\n}\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css">\n<span class="hljs-selector-class">.modal-content-demo1</span> {\n  <span class="hljs-attribute">min-width</span>: <span class="hljs-number">200px</span>;\n  <span class="hljs-attribute">background</span>: <span class="hljs-number">#fff</span>;\n  <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#ccc</span>;\n  <span class="hljs-attribute">padding</span>: <span class="hljs-number">15px</span>;\n  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">2px</span>;\n}\n<span class="hljs-selector-class">.modal-content-demo1-head</span>{\n  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">16px</span>;\n}\n<span class="hljs-selector-class">.modal-content-demo1-content</span>{\n  <span class="hljs-attribute">margin-top</span>: <span class="hljs-number">20px</span>;\n  <span class="hljs-attribute">padding-bottom</span>: <span class="hljs-number">20px</span>;\n}\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>\n</code></pre>',1),f=(0,l.Wm)("p",null,"静态方法调用",-1),q={class:"ra-docs-demo-examp"},k={class:"ra-docs-demo-comps"},y=(0,l.uE)('<pre><code class="hljs"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;demo-wrapper&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">r-button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;show&quot;</span>&gt;</span>显示<span class="hljs-tag">&lt;/<span class="hljs-name">r-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n<span class="hljs-keyword">import</span> { defineComponent, getCurrentInstance, reactive, ref, createVNode, onUnmounted } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> defineComponent({\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">const</span> { proxy } = getCurrentInstance()\n    <span class="hljs-keyword">const</span> show = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>{\n      proxy.$rModal({\n        <span class="hljs-attr">animateIn</span>: <span class="hljs-string">&#39;bounceIn&#39;</span>,\n        <span class="hljs-attr">animateOut</span>: <span class="hljs-string">&#39;bounceOut&#39;</span>,\n        <span class="hljs-attr">content</span>: createVNode(<span class="hljs-string">&#39;div&#39;</span>,\n          {\n          <span class="hljs-attr">class</span>: <span class="hljs-string">&#39;modal-content-demo1&#39;</span>,\n          },\n          [createVNode(<span class="hljs-string">&#39;div&#39;</span>, {<span class="hljs-attr">class</span>: <span class="hljs-string">&#39;modal-content-demo1-head&#39;</span>}, <span class="hljs-string">&#39;点击遮罩层关闭&#39;</span>), createVNode(<span class="hljs-string">&#39;div&#39;</span>, {<span class="hljs-attr">class</span>: <span class="hljs-string">&#39;modal-content-demo1-content&#39;</span>}, <span class="hljs-string">&#39;没有关闭按钮可咋整？&#39;</span>)]\n        ),\n        <span class="hljs-attr">bodyOverflow</span>: <span class="hljs-literal">false</span>,\n        <span class="hljs-attr">closeOnClickMask</span>: <span class="hljs-literal">true</span>\n      })\n    }\n    <span class="hljs-keyword">return</span> {\n      show\n    }\n  }\n})\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</code></pre>',1),W=(0,l.uE)("<h2>props</h2><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>show</td><td>显示状态，v-model:show</td><td>Boolean</td><td>false</td></tr><tr><td>showMask</td><td>显示遮罩层</td><td>Boolean</td><td>true</td></tr><tr><td>closeOnClickMask</td><td>点击遮罩层关闭</td><td>Boolean</td><td>false</td></tr><tr><td>animateIn</td><td>入场动画：参考animate.css</td><td>String</td><td>&#39;fadeIn&#39;</td></tr><tr><td>animateOut</td><td>出场动画：参考animate.css</td><td>String</td><td>&#39;fadeOut&#39;</td></tr><tr><td>bodyOverflow</td><td>是否给body设置overflow:hidden</td><td>Boolean</td><td>true</td></tr><tr><td>contentCustomClass</td><td>模态窗容器自定义class</td><td>Array</td><td>():string[]=&gt;[]</td></tr></tbody></table><h2>events</h2><table><thead><tr><th>事件名</th><th>说明</th><th>参数</th></tr></thead><tbody><tr><td>onClose</td><td>关闭事件</td><td></td></tr><tr><td>update:show</td><td>更新显示状态</td><td>isShow:boolean</td></tr></tbody></table>",4),x={class:"modal-demo-wrapper"},S={class:"modal-content-demo0"},O=(0,l.Wm)("div",{class:"modal-content-demo0-head"},"模态框基础用法",-1),I={class:"modal-content-demo0-foot"},_=(0,l.Uk)("关闭"),U=(0,l.Uk)("显示"),M={data:()=>({show:!1}),render:function(s,a,n,t,p,o){const c=(0,l.up)("r-button"),e=(0,l.up)("r-modal");return(0,l.wg)(),(0,l.j4)("div",x,[(0,l.Wm)(e,{show:p.show,"onUpdate:show":a[2]||(a[2]=s=>p.show=s),bodyOverflow:!1},{default:(0,l.w5)((()=>[(0,l.Wm)("div",S,[O,(0,l.Wm)("div",I,[(0,l.Wm)(c,{colorType:"error",onClick:a[1]||(a[1]=s=>p.show=!1)},{default:(0,l.w5)((()=>[_])),_:1})])])])),_:1},8,["show"]),(0,l.Wm)(c,{onClick:a[3]||(a[3]=s=>p.show=!0)},{default:(0,l.w5)((()=>[U])),_:1})])}},T={class:"modal-demo-wrapper"},z={class:"modal-content-demo1"},E=(0,l.Wm)("div",{class:"modal-content-demo1-head"},"模态框基础用法",-1),N={class:"modal-content-demo1-foot"},B=(0,l.Uk)("关闭"),V=(0,l.Uk)("显示"),$={data:()=>({show:!1}),render:function(s,a,n,t,p,o){const c=(0,l.up)("r-button"),e=(0,l.up)("r-modal");return(0,l.wg)(),(0,l.j4)("div",T,[(0,l.Wm)(e,{show:p.show,"onUpdate:show":a[2]||(a[2]=s=>p.show=s),bodyOverflow:!1,animateIn:"bounceIn",animateOut:"bounceOut"},{default:(0,l.w5)((()=>[(0,l.Wm)("div",z,[E,(0,l.Wm)("div",N,[(0,l.Wm)(c,{colorType:"error",onClick:a[1]||(a[1]=s=>p.show=!1)},{default:(0,l.w5)((()=>[B])),_:1})])])])),_:1},8,["show"]),(0,l.Wm)(c,{onClick:a[3]||(a[3]=s=>p.show=!0)},{default:(0,l.w5)((()=>[V])),_:1})])}},A={class:"modal-demo-wrapper"},F=(0,l.Wm)("div",{class:"modal-content-demo1"},[(0,l.Wm)("div",{class:"modal-content-demo1-head"},"点击遮罩层关闭"),(0,l.Wm)("div",{class:"modal-content-demo1-content"},"没有关闭按钮可咋整？")],-1),Z=(0,l.Uk)("显示"),D={data:()=>({show:!1}),render:function(s,a,n,t,p,o){const c=(0,l.up)("r-modal"),e=(0,l.up)("r-button");return(0,l.wg)(),(0,l.j4)("div",A,[(0,l.Wm)(c,{show:p.show,"onUpdate:show":a[1]||(a[1]=s=>p.show=s),bodyOverflow:!1,animateIn:"bounceIn",animateOut:"bounceOut",closeOnClickMask:""},{default:(0,l.w5)((()=>[F])),_:1},8,["show"]),(0,l.Wm)(e,{onClick:a[2]||(a[2]=s=>p.show=!0)},{default:(0,l.w5)((()=>[Z])),_:1})])}},G={class:"demo-wrapper"},H=(0,l.Uk)("显示"),J=(0,l.aZ)({setup(){const{proxy:s}=(0,l.FN)();return{show:function(){s.$rModal({animateIn:"bounceIn",animateOut:"bounceOut",content:(0,l.Wm)("div",{class:"modal-content-demo1"},[(0,l.Wm)("div",{class:"modal-content-demo1-head"},"点击遮罩层关闭"),(0,l.Wm)("div",{class:"modal-content-demo1-content"},"没有关闭按钮可咋整？")]),bodyOverflow:!1,closeOnClickMask:!0})}}}});J.render=function(s,a,n,t,p,o){const c=(0,l.up)("r-button");return(0,l.wg)(),(0,l.j4)("div",G,[(0,l.Wm)(c,{onClick:s.show},{default:(0,l.w5)((()=>[H])),_:1},8,["onClick"])])};const K={name:"views.docs.components.modal",components:{demo0:M,demo1:$,demo2:D,demo3:J},data:()=>({demoControlShowCode:[]}),methods:{demoControlShowCodeTotgal(s){this.demoControlShowCode[s]?this.demoControlShowCode[s].show=!this.demoControlShowCode[s].show:this.demoControlShowCode[s]={show:!0}}},render:function(s,a,n,x,S,O){const I=(0,l.up)("demo0"),_=(0,l.up)("demo1"),U=(0,l.up)("demo2"),M=(0,l.up)("demo3");return(0,l.wg)(),(0,l.j4)("div",p,[o,c,e,d,(0,l.Wm)("div",h,[(0,l.Wm)("div",r,[(0,l.Wm)(I)]),(0,l.Wm)("div",{class:["ra-docs-demo-code",{showCode:S.demoControlShowCode[0]&&!!S.demoControlShowCode[0].show}]},[m],2),(0,l.Wm)("div",{class:"ra-docs-demo-control",onClick:a[1]||(a[1]=s=>O.demoControlShowCodeTotgal(0))},(0,t.zw)(S.demoControlShowCode[0]&&S.demoControlShowCode[0].show?"隐藏代码":"显示代码"),1)]),j,(0,l.Wm)("div",i,[(0,l.Wm)("div",u,[(0,l.Wm)(_)]),(0,l.Wm)("div",{class:["ra-docs-demo-code",{showCode:S.demoControlShowCode[1]&&!!S.demoControlShowCode[1].show}]},[g],2),(0,l.Wm)("div",{class:"ra-docs-demo-control",onClick:a[2]||(a[2]=s=>O.demoControlShowCodeTotgal(1))},(0,t.zw)(S.demoControlShowCode[1]&&S.demoControlShowCode[1].show?"隐藏代码":"显示代码"),1)]),w,(0,l.Wm)("div",b,[(0,l.Wm)("div",v,[(0,l.Wm)(U)]),(0,l.Wm)("div",{class:["ra-docs-demo-code",{showCode:S.demoControlShowCode[2]&&!!S.demoControlShowCode[2].show}]},[C],2),(0,l.Wm)("div",{class:"ra-docs-demo-control",onClick:a[3]||(a[3]=s=>O.demoControlShowCodeTotgal(2))},(0,t.zw)(S.demoControlShowCode[2]&&S.demoControlShowCode[2].show?"隐藏代码":"显示代码"),1)]),f,(0,l.Wm)("div",q,[(0,l.Wm)("div",k,[(0,l.Wm)(M)]),(0,l.Wm)("div",{class:["ra-docs-demo-code",{showCode:S.demoControlShowCode[3]&&!!S.demoControlShowCode[3].show}]},[y],2),(0,l.Wm)("div",{class:"ra-docs-demo-control",onClick:a[4]||(a[4]=s=>O.demoControlShowCodeTotgal(3))},(0,t.zw)(S.demoControlShowCode[3]&&S.demoControlShowCode[3].show?"隐藏代码":"显示代码"),1)]),W])}}}}]);
//# sourceMappingURL=113.js.map